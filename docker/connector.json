{
  "name": "protobuf-to-parquet-test",
  "connector.class": "io.confluent.connect.s3.S3SinkConnector",
  "storage.class": "io.confluent.connect.s3.storage.S3Storage",
  "format.class": "io.confluent.connect.s3.format.parquet.ParquetFormat",
  "keys.format.class": "io.confluent.connect.s3.format.parquet.ParquetFormat",
  "value.converter": "io.confluent.connect.protobuf.ProtobufConverter",
  "key.converter": "org.apache.kafka.connect.storage.StringConverter",
  "store.kafka.keys": "false",
  "store.url": "http://minio:9000",
  "value.converter.schema.registry.url": "http://schema-registry:8081",
  "s3.region": "eu-west-1",
  "s3.bucket.name": "prototest",
  "tasks.max": "1",
  "parquet.codec": "none",
  "partitioner.class": "io.confluent.connect.storage.partitioner.HourlyPartitioner",
  "locale": "en-GB",
  "timezone": "Etc/UTC",
  "timestamp.extractor": "Wallclock",
  "flush.size": "1000",
  "rotate.interval.ms": "30000",
  "src.kafka.bootstrap.servers": "kafka:29092",
  "src.kafka.topic.security.protocol": "PLAINTEXT",
  "src.kafka.group.id": "protobuf_to_parquet_test",
  "src.kafka.auto.offset.reset": "earliest",
  "src.kafka.client.dns.lookup": "use_all_dns_ips",
  "src.kafka.reconnect.backoff.max.ms": "10000",
  "src.kafka.request.timeout.ms": "30000",
  "topics": "protobuf-topic",
  "aws.access.key.id": "access",
  "aws.secret.access.key": "secretkey"
}